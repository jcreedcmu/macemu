const fs = require('fs');
const {rezOfBytes} = require('./rez-utils');

console.log(`/*****************
* This file is generated by scripts/make-logo-pict.js, edits may be lost
*****************/`);

const boundingRect = {top: 0, left: 0, bottom: 0x6c, right: 0xa8};

function rectBytes(rect) {
  return [
	 ...wordBytes(rect.top),
	 ...wordBytes(rect.left),
	 ...wordBytes(rect.bottom),
	 ...wordBytes(rect.right),
  ];
}

function wordBytes(word) {
  return [0xff & (word >> 8), 0xff & word];
}

const header = [
  0x00, 0x11, 0x02, 0xff, 0x0c, 0x00, 0xff, 0xfe, // required specific header bytes
  0x00, 0x00, // reserved
  0x00, 0x48, 0x00, 0x00, // horizontal resolution 72dpi
  0x00, 0x48, 0x00, 0x00, // vertical resolution 72dpi
  ...rectBytes(boundingRect),
  0x00, 0x00, // reserved
];

function words(string) {
  return string.split(/\s+/).filter(x => x.length).flatMap(x => wordBytes(parseInt(x, 16)));
}

const image = [
  ...words(`
  001E
  0001
  000A
  0002 0002 006E 00AA
  001A 0000 FFFF 0000
  0034
  0002 0002 006E 00AA
  001A 0000 0000 FFFF
  005C
  0008
  0008
  001A 7777 7777 7777
  0071
  001A
  0002 0002 006E 00AA
  006E 0002 0002 0054 006E 00AA 006E 0002
  00FF
`)
]

const imageWithHeader = [
  ...header,
  ...image,
];

const imageRezBytes = [
  ...wordBytes(
	 2 + /* length of this length field */
	 8 + /* length of bounding Rect */
	 imageWithHeader.length),
  ...rectBytes(boundingRect),
  ...imageWithHeader
];

console.log(`
data 'PICT' (rAboutPict, purgeable) {
  ${rezOfBytes(imageRezBytes)}
};
`);
